#!/bin/bash
# nucleon : George Onoufriou : orchestrator for component scripts

date # print start date time

# to streamline debug output
bashName="nucleon"
echo # yes yes I know
echo "[ ${bashName} ] CWD: ${PWD}"

# handle cli args using getopts functionality
while getopts ":dhr:w:" opt; do #TODO: add help -h
    case ${opt} in

        d) # debug
            isDebug=1
            ;;
        h) # help
            isHelp=1
            ;;
        r) # pi zero root
            rootZero=${OPTARG}
            ;;
        w) # wifi config
            wifiConfig=${OPTARG}
            ;;
        \?)
            echo "[ ${bashName} ] Invalid option: ${OPTARG}" 1>&2
            exit 1
            ;;
        :)
            echo "[ ${bashName} ] Invalid option: ${OPTARG} requires argument" 1>&2
            exit 1
            ;;
    esac
done
shift $((OPTIND -1))

wifiConfig=${wifiConfig:-""}

# print debug log
if [ ${isDebug} ]; then
    echo "[ ${bashName} ] debug: ${isDebug}"
    echo "[ ${bashName} ] help: ${isHelp}"
    echo "[ ${bashName} ] rootZero: ${rootZero}"
    echo "[ ${bashName} ] wifiConfig: ${wifiConfig}"
fi

# print help message
if [ ${isHelp} ]; then
    echo -e "usage: [-d debug] [-h help] -r </dev/sdxx> [-w wifiConfig]\n
    -d debug\t\t\t\t\tverbose debug output
    -h help\t\t\t\t\tdisplay this message
    -r rootZero </dev/sdxx OR /path/to/pi/root> root dir of pi zero w
    -w wifiConfig </path/to/wifi/config>\tconfig to append with wifi settings"
fi

if [ ${rootZero} ]; then # check user provided root dir
    dirRoot="$(dirname "${rootZero}")"

    # check it is a "-b block" device in /dev
    if [ ${dirRoot} == "/dev" ] && [[ -b "${rootZero}" ]]; then # check if this root dir needs to be mounted
        lsblk
        echo "[ ${bashName} ]
        are you sure '${rootZero}' is the correct mount point
        before this program attempts to mount and alter?
        (y/N)"
        read toContinue
        toContinue=${toContinue:-"n"}

        # check if user wants to continue
        if [ ${toContinue} == "y" ] || [ ${toContinue} == "yes" ] ; then # last chance to abort
            zeroTempDir="piZeroTempDir"
            mkdir -p ${zeroTempDir}
            echo "[ ${bashName} ] mounting: '${rootZero}' to temp dir '${zeroTempDir}'"
            sudo mount ${rootZero} ${zeroTempDir}
            sh ./src/wifi -r "${rootZero}" -t "${zeroTempDir}" -d
            echo "[ ${bashName} ] unmounting: ${zeroTempDir}"
            sudo umount ${zeroTempDir}
            rm -r ${zeroTempDir}
        fi

        echo "[ ${bashName} ] bye."

    else
        echo "[ ${bashName} ] '${rootZero}' not recognised as a legitimate mount point
        expected: '/dev/sdxy' where: x = drive letter, y = partition num"
    fi

else
    echo "[ ${bashName} ] please add argument: -r </dev/sdxx OR /path/to/root> "
fi

